import{e as n}from"./app.56a26a36.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u6839\u636E\u5B57\u7B26\u4E32\u4E2D\u7684\u8303\u56F4\u5224\u65AD\u5F53\u524D\u503C" tabindex="-1"><a class="header-anchor" href="#\u6839\u636E\u5B57\u7B26\u4E32\u4E2D\u7684\u8303\u56F4\u5224\u65AD\u5F53\u524D\u503C" aria-hidden="true">#</a> \u6839\u636E\u5B57\u7B26\u4E32\u4E2D\u7684\u8303\u56F4\u5224\u65AD\u5F53\u524D\u503C</h1><p>\u9700\u6C42\u573A\u666F\uFF1A\u56E0\u4E3A\u4E1A\u52A1\u4E2D\u9700\u8981\u53BB\u8C03\u7528\u7B2C\u4E09\u65B9\u7684\u63A5\u53E3\uFF0C\u67D0\u4E9B\u5B57\u6BB5\u9700\u8981\u505A\u6821\u9A8C\uFF0C\u4F46\u662F\u63A5\u53E3\u8FD4\u56DE\u7684\u89C4\u5219\u90FD\u662F\u4E00\u4E9B\u63D0\u793A\uFF0C\u50CF\u8FD9\u6837\u7684\uFF1A &#39;\u91D1\u989D\u533A\u95F4: 140\u2264x\u2264350USD&#39;\u3001&#39;\u6700\u4F4E\u91D1\u989D: x\u2265140.89USD&#39;\u3001&#39;\u4E09\u8FB9\u4E4B\u548C: 10.0cm\u2264x\u226420.0cm&#39;...\u9700\u8981\u81EA\u5DF1\u53BB\u91CC\u9762\u63D0\u53D6\u89C4\u5219\u548C\u4E0A\u4E0B\u9650\u503C\u6765\u5224\u65AD\u3002</p><p><strong>\u8303\u56F4\u603B\u5171\u6709 16 \u79CD\u60C5\u51B5\uFF1A</strong></p><ol><li>min \u2264 x \u2264 max</li><li>min \u2264 x &lt; max</li><li>min &lt; x \u2264 max</li><li>min &lt; x &lt; max</li><li>max \u2265 x \u2265 min</li><li>max \u2265 x &gt; min</li><li>max &gt; x \u2265 min</li><li>max &gt; x &gt; min</li><li>x \u2264 max</li><li>x &lt; max</li><li>x \u2265 min</li><li>x &gt; min</li><li>min \u2264 x</li><li>min &lt; x</li><li>max \u2265 x</li><li>max &gt; x</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isRangeIn</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[+-]?(0|([1-9]\\d*))(\\.\\d+)?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5F53\u524D\u503C\u975E\u6570\u5B57&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>str <span class="token operator">||</span> <span class="token punctuation">(</span>str <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> str <span class="token operator">!==</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span> <span class="token comment">// \u89C4\u5219\u5B57\u7B26\u4E32\u4E0D\u5B58\u5728\u9ED8\u8BA4\u901A\u8FC7</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d+(\\.\\d+)?</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arr <span class="token operator">||</span> <span class="token operator">!</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span> <span class="token comment">// \u672A\u63D0\u53D6\u5230\u8303\u56F4\u6570\u636E\u9ED8\u8BA4\u901A\u8FC7</span>

  <span class="token keyword">const</span> numFirst <span class="token operator">=</span> <span class="token operator">+</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> numTwo <span class="token operator">=</span> <span class="token operator">+</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> isVali <span class="token operator">=</span> <span class="token boolean">true</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;\u2264x\u2264&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isVali <span class="token operator">=</span> <span class="token punctuation">(</span>numFirst <span class="token operator">&lt;=</span> x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> numTwo<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;\u2264x&lt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isVali <span class="token operator">=</span> <span class="token punctuation">(</span>numFirst <span class="token operator">&lt;=</span> x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;</span> numTwo<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;x\u2264&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isVali <span class="token operator">=</span> <span class="token punctuation">(</span>numFirst <span class="token operator">&lt;</span> x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> numTwo<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;x&lt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isVali <span class="token operator">=</span> <span class="token punctuation">(</span>numFirst <span class="token operator">&lt;</span> x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;</span> numTwo<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;\u2265x\u2265&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isVali <span class="token operator">=</span> <span class="token punctuation">(</span>numFirst <span class="token operator">&gt;=</span> x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;=</span> numTwo<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;\u2265x&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isVali <span class="token operator">=</span> <span class="token punctuation">(</span>numFirst <span class="token operator">&gt;=</span> x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> numTwo<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;&gt;x\u2265&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isVali <span class="token operator">=</span> <span class="token punctuation">(</span>numFirst <span class="token operator">&gt;</span> x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;=</span> numTwo<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;&gt;x&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isVali <span class="token operator">=</span> <span class="token punctuation">(</span>numFirst <span class="token operator">&gt;</span> x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> numTwo<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;x\u2264&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isVali <span class="token operator">=</span> x <span class="token operator">&lt;=</span> numFirst
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;x&lt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isVali <span class="token operator">=</span> x <span class="token operator">&lt;</span> numFirst
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;x\u2265&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isVali <span class="token operator">=</span> x <span class="token operator">&gt;=</span> numFirst
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;x&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isVali <span class="token operator">=</span> x <span class="token operator">&gt;</span> numFirst
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;\u2264x&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isVali <span class="token operator">=</span> numFirst <span class="token operator">&lt;=</span> x
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;x&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isVali <span class="token operator">=</span> numFirst <span class="token operator">&lt;</span> x
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;\u2265x&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isVali <span class="token operator">=</span> numFirst <span class="token operator">&gt;=</span> x
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;&gt;x&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isVali <span class="token operator">=</span> numFirst <span class="token operator">&gt;</span> x
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> isVali
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5</span>
<span class="token comment">// const a = isRangeIn(6.9999999999, &#39;\u7B2C\u4E09\u957F\u8FB9: 4.0cm&lt;x&lt;7.0cm&#39;)</span>
<span class="token comment">// const a = isRangeIn(11, &#39;x&gt;10.0cm&#39;)</span>
<span class="token comment">// const a = isRangeIn(9, &#39;\u4E24\u957F\u8FB9\u4E4B\u548C: 10.0cm\u2264x\u226420.0cm&#39;)</span>
<span class="token comment">// const a = isRangeIn(&#39;141&#39;, &#39;\u91D1\u989D\u533A\u95F4: 140\u2264x\u2264350USD&#39;)</span>
<span class="token comment">// console.log(a)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><p>\u9762\u5BF9\u8FD9\u79CD\u5F88\u65E0\u5948\u7684\u9700\u6C42\uFF0C\u4E00\u5B9A\u8981\u81EA\u5DF1\u4ECE\u903B\u8F91\u4E0A\u68B3\u7406\u6E05\u695A\uFF0C\u4E0D\u8981\u6F0F\u6389\u4EFB\u4F55\u4E00\u79CD\u53EF\u80FD\u7684\u60C5\u51B5</p><h2 id="todo" tabindex="-1"><a class="header-anchor" href="#todo" aria-hidden="true">#</a> TODO</h2><p>\u89C4\u5219\u91CC\u5982\u679C\u6709\u6570\u5B57\uFF0C\u4E0A\u9762\u63D0\u53D6\u51FA\u6765\u7684 numFirst \u548C numTwo \u4F1A\u4E0D\u5BF9\uFF0C\u5982\uFF1A\u4E24\u77ED\u8FB9\u4E4B\u548C*2\uFF1Ax\u2264120cm\uFF0C\u65B9\u6CD5\u91CC\u7684\u6570\u5B57\u63D0\u53D6\u9700\u4F18\u5316</p>`,8);function t(o,e){return p}var u=s(a,[["render",t]]);export{u as default};
